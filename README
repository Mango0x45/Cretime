NOTE: This repository is now dead, you can find a better version of this here: https://www.github.com/MCBE-Speedrunning/modutils

                                     _    _
                     ___  _ __  ___ | |_ (_) _ __ ___    ___
                    / __|| '__|/ _ \| __|| || '_ ` _ \  / _ \
                   | (__ | |  |  __/| |_ | || | | | | ||  __/
                    \___||_|   \___| \__||_||_| |_| |_| \___|

Overview
========
c-retime, or cretime (pronounced Cree-time, not See-retime!) is a simple command line tool for retiming segments of youtube videos.
It should in theory allow you to retime a segment of any youtube video for any purpose, but it's main purpose is to make retiming speedruns easier.
Due to it's use of getopt to parse command line options, this doesn't work on Windows, but I may make a windows option eventually.


Compilation
===========
You can compile cretime.c with gcc by entering the one of the following commands (depending on which program you have):
    sudo make install
    doas make install
Alternatively, you can compile it with this command:
    gcc -o cretime cretime.c -lm


Usage
=====
If cretime is in your PATH, just run
    cretime [OPTIONS]...
and if it is not in your PATH, you can run
    ./cretime [OPTIONS]...

For example:
    cretime -mf 30

When run, if no FPS is supplied with the -f or --fps flags, you will be prompted for the videos FPS.
After that, you will be prompted to paste the youtube debug info of the video for the beginning frame.
Then do the same for the end frame.
Finally the end time or a mod note will be output depending on if you used the -m or --mod-note flags.

If you want to have the mod note automatically copied to the clipboard, you can run
    echo $(cretime) | xclip -selection clipboard
If you are not using xclip, just pipe the output into which ever program you do use, such as xsel, or if you're a mac user, pbcopy.
Alternatively, you can use the shretime.sh shell script included in the repo which does have a -c/--copy option to copy to the clipboard, but it's not as convenient when inputting the YT debug info.
If you want to bulk retime while copying to the clipboard, you can run
    while true; do echo $(cretime) | xclip -selection clipboard; done


Flags
=====
Functionality:
    -b, --bulk-retime       (This will loop the program over and over, useful when retiming multiple runs)
    -f, --fps=FPS           (Lets you manually set the fps of the video being retimed)
    -m, --mod-note          (Output a mod note instead of just the run duration)

Miscellaneous:
    -h, --help              (Get help!)
    -v, --version           (Just version info)
